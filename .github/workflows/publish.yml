name: Create Release Builds

on:
  push:
    tags:
      - "v*" # matches v1.0.1, v1.2, v2, etc

env:
  CARGO_TERM_COLOR: always
  
jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
  build:
    name: Create a release build, tag and upload binary
    needs: once
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:bot.db
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Python dependencies
      run: |
        pip install --user -r requirements.txt
    - name: DB Migrations
      run: |
        sqlite3 bot.db < migrations/20220301134633_bot.sql
    - name: Build release version
      run: cargo build --release
    - name: Make Zip
      run: 
        7z a -tzip ${{ github.workspace }}/target/release/tgtg-discord-bot-linux.zip ${{ github.workspace }}/target/release/tgtg-discord-bot* "-x!*.d" "-x!*.pdb"
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/target/release/tgtg-discord-bot-linux.zip
        asset_name: tgtg-discord-bot-linux.zip
        asset_content_type: application/octet-stream
